/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Confidence.Formularios;

import com.mysql.jdbc.CallableStatement;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Martin Tomas F
 */
public class frm_editarDatosAdherente extends javax.swing.JFrame {

    private String user = "confidenceuser", password = "podersasrl";

    public frm_editarDatosAdherente() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jtf_nombre = new javax.swing.JTextField();
        jtf_apellido = new javax.swing.JTextField();
        jtf_telefono = new javax.swing.JTextField();
        jtf_domicilio = new javax.swing.JTextField();
        jtf_ciudad = new javax.swing.JTextField();
        jtf_provincia = new javax.swing.JTextField();
        jtf_profesion = new javax.swing.JTextField();
        jtf_categoria = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel41 = new javax.swing.JLabel();
        jtf_dniEdicion = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jtf_edicionVinculoReferido = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel32 = new javax.swing.JLabel();
        jtf_edicionVinculoNombreReferido = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel39 = new javax.swing.JLabel();
        jtf_edicionVinculoNombreReferente = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jtf_edicionVinculoReferente = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Confidence - Edicion de datos");
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTabbedPane1.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel30.setText("Nombre");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel31.setText("Apellido");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel33.setText("Telefono");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel34.setText("Domicilio");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel35.setText("Ciudad");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel36.setText("Provincia");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel37.setText("Profesion");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel29.setText("Categoria");

        jtf_nombre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_nombreActionPerformed(evt);
            }
        });
        jtf_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_nombreKeyTyped(evt);
            }
        });

        jtf_apellido.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_apellidoKeyTyped(evt);
            }
        });

        jtf_telefono.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_telefonoKeyTyped(evt);
            }
        });

        jtf_domicilio.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_domicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_domicilioKeyTyped(evt);
            }
        });

        jtf_ciudad.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_ciudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_ciudadKeyTyped(evt);
            }
        });

        jtf_provincia.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_provincia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_provinciaKeyTyped(evt);
            }
        });

        jtf_profesion.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jtf_categoria.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_categoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_categoriaKeyTyped(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton7.setText("Vaciar campos");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton8.setText("Confirmar datos");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton13.setText("Cerrar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Editar datos personales de adherente");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel41.setText("D.N.I adherido");

        jtf_dniEdicion.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_dniEdicion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_dniEdicionKeyTyped(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton16.setText("Buscar");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtf_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtf_profesion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtf_provincia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtf_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtf_domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtf_nombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_apellido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(173, 173, 173))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel41)
                        .addGap(98, 98, 98)
                        .addComponent(jtf_dniEdicion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_dniEdicion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_provincia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_profesion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtf_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Datos personales", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel42.setText("D.N.I adherido");
        jPanel2.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 170, -1, 40));

        jtf_edicionVinculoReferido.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jPanel2.add(jtf_edicionVinculoReferido, new org.netbeans.lib.awtextra.AbsoluteConstraints(408, 170, 200, 40));

        jButton17.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton17.setText("Buscar");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 170, 140, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Eliminar vinculos");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 11, -1, -1));
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 65, 966, 10));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel32.setText("Nombre");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 258, -1, -1));

        jtf_edicionVinculoNombreReferido.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_edicionVinculoNombreReferido.setEnabled(false);
        jtf_edicionVinculoNombreReferido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_edicionVinculoNombreReferidoActionPerformed(evt);
            }
        });
        jPanel2.add(jtf_edicionVinculoNombreReferido, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 254, 295, 40));
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 336, 956, 10));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Datos del adherido");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 81, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Datos del referente");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 352, -1, -1));

        jButton14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton14.setText("Cerrar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 635, 90, 30));

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton9.setText("Vaciar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(758, 635, 90, 30));

        jButton10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton10.setText("Eliminar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(866, 635, 90, 30));
        jPanel2.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 619, 966, 10));

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel39.setText("Nombre");
        jPanel2.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 520, -1, -1));

        jtf_edicionVinculoNombreReferente.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_edicionVinculoNombreReferente.setEnabled(false);
        jtf_edicionVinculoNombreReferente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_edicionVinculoNombreReferenteActionPerformed(evt);
            }
        });
        jPanel2.add(jtf_edicionVinculoNombreReferente, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 516, 295, 40));

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel43.setText("D.N.I referente");
        jPanel2.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 421, -1, 40));

        jtf_edicionVinculoReferente.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtf_edicionVinculoReferente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_edicionVinculoReferenteActionPerformed(evt);
            }
        });
        jPanel2.add(jtf_edicionVinculoReferente, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, 200, 40));

        jButton18.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton18.setText("Buscar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(629, 421, 140, 40));

        jTabbedPane1.addTab("Vinculos", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nombreActionPerformed

    private void jtf_edicionVinculoNombreReferidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_edicionVinculoNombreReferidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_edicionVinculoNombreReferidoActionPerformed

    private void jtf_edicionVinculoNombreReferenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_edicionVinculoNombreReferenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_edicionVinculoNombreReferenteActionPerformed

    private void jtf_edicionVinculoReferenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_edicionVinculoReferenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_edicionVinculoReferenteActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if (!jtf_dniEdicion.getText().trim().equals("")) {
            if (buscarDNI(Integer.parseInt(jtf_dniEdicion.getText())) == -1 || !verificarEstado(Integer.parseInt(jtf_dniEdicion.getText()))) {
                JOptionPane.showMessageDialog(this, "No existe el DNI ingresado o no esta dado de alta", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos(1);
            } else {
                vaciarCampos(2);
                rellenarDatosParaModificacion(Integer.parseInt(jtf_dniEdicion.getText()));
            }
        }else{
            JOptionPane.showMessageDialog(this, "Rellene el campo de DNI para continuar", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (!jtf_dniEdicion.getText().trim().equals("")) {
            if (buscarDNI(Integer.parseInt(jtf_dniEdicion.getText())) == -1 && !verificarEstado(Integer.parseInt(jtf_dniEdicion.getText()))) {
                JOptionPane.showMessageDialog(this, "No existe el DNI ingresado o no esta dado de alta", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                int opc = JOptionPane.showConfirmDialog(this, "¿Esta seguro de modificar los datos?", "Confirmacion", JOptionPane.YES_NO_OPTION);
                if (opc == 0) {
                    modificarDatos(Integer.parseInt(jtf_dniEdicion.getText()));
                }
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        vaciarCampos(1);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jtf_dniEdicionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_dniEdicionKeyTyped
        Character tecla = evt.getKeyChar();
        if (!(Character.isDigit(tecla) && (jtf_dniEdicion.getText().length() <= 9))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_dniEdicionKeyTyped

    private void jtf_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_nombreKeyTyped
        Character tecla = evt.getKeyChar();
        if ((tecla < 'a' || tecla > 'z') && (tecla < 'A' || tecla > 'Z') && !Character.isWhitespace(tecla)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_nombreKeyTyped

    private void jtf_apellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_apellidoKeyTyped
        Character tecla = evt.getKeyChar();
        if ((tecla < 'a' || tecla > 'z') && (tecla < 'A' || tecla > 'Z') && !Character.isWhitespace(tecla)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_apellidoKeyTyped

    private void jtf_domicilioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_domicilioKeyTyped
        Character tecla = evt.getKeyChar();
        if ((tecla < 'a' || tecla > 'z') && (tecla < 'A' || tecla > 'Z') && !Character.isWhitespace(tecla) && !Character.isDigit(tecla) && !Character.isWhitespace(tecla) && !(tecla.equals('.')|| tecla.equals(','))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_domicilioKeyTyped

    private void jtf_ciudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_ciudadKeyTyped
        Character tecla = evt.getKeyChar();
        if ((tecla < 'a' || tecla > 'z') && (tecla < 'A' || tecla > 'Z') && !Character.isWhitespace(tecla) && !Character.isWhitespace(tecla) && !(tecla.equals('.')|| tecla.equals(','))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_ciudadKeyTyped

    private void jtf_provinciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_provinciaKeyTyped
        Character tecla = evt.getKeyChar();
        if ((tecla < 'a' || tecla > 'z') && (tecla < 'A' || tecla > 'Z') && !Character.isWhitespace(tecla) && !Character.isWhitespace(tecla) && !(tecla.equals('.')|| tecla.equals(','))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_provinciaKeyTyped

    private void jtf_categoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_categoriaKeyTyped
        char tecla = evt.getKeyChar();
        if ((tecla < 'a' || tecla > 'z') && (tecla < 'A' || tecla > 'Z') || !(jtf_categoria.getText().length() < 1)) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_categoriaKeyTyped

    private void jtf_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_telefonoKeyTyped
        Character tecla = evt.getKeyChar();
        if (!(Character.isDigit(tecla) && (jtf_telefono.getText().length() < 11))) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtf_telefonoKeyTyped

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        if (!jtf_edicionVinculoReferido.getText().trim().equals("")) {
            if (buscarDNI(Integer.parseInt(jtf_edicionVinculoReferido.getText())) == -1 || !verificarEstado(Integer.parseInt(jtf_edicionVinculoReferido.getText()))) {
                JOptionPane.showMessageDialog(this, "No existe el DNI ingresado o no esta dado de alta", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos(1);
            } else {
                vaciarCampos(2);
                RellenarNombreVinculos(Integer.parseInt(jtf_edicionVinculoReferido.getText()), 1);
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if (!jtf_edicionVinculoReferente.getText().trim().equals("")) {
            if (buscarDNI(Integer.parseInt(jtf_edicionVinculoReferente.getText())) == -1 || !verificarEstado(Integer.parseInt(jtf_edicionVinculoReferente.getText()))) {
                JOptionPane.showMessageDialog(this, "No existe el DNI ingresado o no esta dado de alta", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos(1);
            } else {
                RellenarNombreVinculos(Integer.parseInt(jtf_edicionVinculoReferente.getText()), 2);
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (!jtf_edicionVinculoReferido.getText().trim().equals("") && !jtf_edicionVinculoReferente.getText().trim().equals("")) {
            if (buscarDNI(Integer.parseInt(jtf_edicionVinculoReferido.getText())) == -1 && Integer.parseInt(jtf_edicionVinculoReferente.getText()) == -1) {
                JOptionPane.showMessageDialog(this, "No existe el DNI ingresado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    int dniReferente = buscarDNI(Integer.parseInt(jtf_edicionVinculoReferente.getText()));
                    int dniReferido = buscarDNI(Integer.parseInt(jtf_edicionVinculoReferido.getText()));
                    eliminarVinculo(dniReferente, dniReferido);
                    jtf_edicionVinculoNombreReferente.setText("");
                    jtf_edicionVinculoNombreReferido.setText("");
                    jtf_edicionVinculoReferente.setText("");
                    jtf_edicionVinculoReferido.setText("");
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
                }
            }
        }    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_editarDatosAdherente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jtf_apellido;
    private javax.swing.JTextField jtf_categoria;
    private javax.swing.JTextField jtf_ciudad;
    private javax.swing.JTextField jtf_dniEdicion;
    private javax.swing.JTextField jtf_domicilio;
    private javax.swing.JTextField jtf_edicionVinculoNombreReferente;
    private javax.swing.JTextField jtf_edicionVinculoNombreReferido;
    private javax.swing.JTextField jtf_edicionVinculoReferente;
    private javax.swing.JTextField jtf_edicionVinculoReferido;
    private javax.swing.JTextField jtf_nombre;
    private javax.swing.JTextField jtf_profesion;
    private javax.swing.JTextField jtf_provincia;
    private javax.swing.JTextField jtf_telefono;
    // End of variables declaration//GEN-END:variables

    private int buscarDNI(int dni) {
        int verif = 0;
        Connection con = null;
        CallableStatement cs = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            cs = (CallableStatement) con.prepareCall("CALL existeDNI(?,?)");
            cs.setInt(1, dni);
            cs.registerOutParameter(2, java.sql.Types.INTEGER);
            cs.execute();
            verif = cs.getInt(2);
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (cs != null) {
                try {
                    cs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return verif;
    }

    private boolean verificarEstado(int dni) {
        boolean verif = false;
        Connection con = null;
        CallableStatement cs = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            cs = (CallableStatement) con.prepareCall("CALL verificarEstado(?,?)");
            cs.setInt(1, dni);
            cs.registerOutParameter(2, java.sql.Types.BOOLEAN);
            cs.execute();
            verif = cs.getBoolean(2);
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (cs != null) {
                try {
                    cs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return verif;
    }

    private void rellenarDatosParaModificacion(int dni) {
        Connection con = null;
        Statement st = null;
        String nombre = "", apellido = "", telefono = "", domicilio = "", ciudad = "", provincia = "", profesion = "", categoria = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.createStatement();
            ResultSet rs = st.executeQuery("select nombre, apellido, telefono, domicilio, ciudad, provincia, profesion, categoria from adheridos where dni = " + dni);
            while (rs.next()) {
                nombre = rs.getString(1);
                apellido = rs.getString(2);
                telefono = rs.getString(3);
                domicilio = rs.getString(4);
                ciudad = rs.getString(5);
                provincia = rs.getString(6);
                profesion = rs.getString(7);
                categoria = rs.getString(8);
            }
            jtf_nombre.setText(nombre);
            jtf_apellido.setText(apellido);
            jtf_telefono.setText(telefono);
            jtf_ciudad.setText(ciudad);
            jtf_domicilio.setText(domicilio);
            jtf_provincia.setText(provincia);
            jtf_profesion.setText(profesion);
            jtf_categoria.setText(categoria);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void modificarDatos(int dni) {
        Connection con = null;
        PreparedStatement st = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.prepareStatement("update adheridos set nombre = ?, apellido = ?, telefono = ?, domicilio = ?, ciudad = ?, provincia = ?, profesion = ?, categoria = ? where dni = ?");
            st.setString(1, jtf_nombre.getText());
            st.setString(2, jtf_apellido.getText());
            st.setString(3, jtf_telefono.getText());
            st.setString(4, jtf_domicilio.getText());
            st.setString(5, jtf_ciudad.getText());
            st.setString(6, jtf_provincia.getText());
            st.setString(7, jtf_profesion.getText());
            st.setString(8, jtf_categoria.getText());
            st.setInt(9, dni);
            st.executeUpdate();
            JOptionPane.showMessageDialog(null, "Los datos han sido modificados", "Exito", JOptionPane.INFORMATION_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void vaciarCampos(int opc) {
        if (opc == 1){
            jtf_dniEdicion.setText("");
        }
        jtf_nombre.setText("");
        jtf_apellido.setText("");
        jtf_telefono.setText("");
        jtf_domicilio.setText("");
        jtf_ciudad.setText("");
        jtf_profesion.setText("");
        jtf_categoria.setText("");
        jtf_provincia.setText("");
    }

    private void RellenarNombreVinculos(int dni, int op) {
        Connection con = null;
        Statement st = null;
        String nombre = "";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.createStatement();
            ResultSet rs = st.executeQuery("select nombre from adheridos where dni = " + dni);
            while (rs.next()) {
                nombre = rs.getString(1);
            }
            if (op == 1) {
                jtf_edicionVinculoNombreReferido.setText(nombre);
            } else {
                jtf_edicionVinculoNombreReferente.setText(nombre);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void eliminarVinculo(int dniReferente, int dniReferido) {
        if (vinculoYaSeHizo(dniReferente, dniReferido)) {
            desvincular(dniReferente, dniReferido);
            JOptionPane.showMessageDialog(this, "El vinculo ha sido eliminado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No existe vinculo entre los adherentes indicados", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private boolean vinculoYaSeHizo(int dniReferente, int dniReferido) {
        int dniPadre = 0;
        int dniHijo = 0;
        dniPadre = traerDniPadre(dniReferido);
        dniHijo = traerDniHijo(dniReferente, dniReferido);
        if (dniPadre != 0 && dniHijo != 0) {
            return true;
        } else {
            return false;
        }
    }

    private int traerDniPadre(int dniHijo) {
        Connection con = null;
        Statement st = null;
        int retorno = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.createStatement();
            ResultSet rs = st.executeQuery("select dniPadre from adheridos where DNI = " + dniHijo);
            while (rs.next()) {
                retorno = rs.getInt(1);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return retorno;
    }

    private int traerDniHijo(int dniReferente, int dnireferido) {
        Connection con = null;
        Statement st = null;
        int retorno = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.createStatement();
            ResultSet rs = st.executeQuery("select dni from adheridos where dniPadre = " + dniReferente + " and dni = " + dnireferido);
            while (rs.next()) {
                retorno = rs.getInt(1);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return retorno;
    }

    private void desvincular(int dniReferente, int dniReferido) {
        int cantHijosPadre = obtenerCantidadHijos(dniReferente);
        restarHijosPadre(dniReferente, cantHijosPadre);
        desvincularHijo(dniReferido);
    }

    private int obtenerCantidadHijos(int dniReferente) {
        Connection con = null;
        Statement st = null;
        int retorno = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.createStatement();
            ResultSet rs = st.executeQuery("select CantHijos from adheridos where dni = " + dniReferente);
            while (rs.next()) {
                retorno = rs.getInt(1);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_AgregarAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return retorno;
    }

    private void restarHijosPadre(int dni, int cantHijos) {
        Connection con = null;
        PreparedStatement st = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.prepareStatement("update adheridos set cantHijos = ? where dni = ?");
            st.setInt(1, cantHijos - 1);
            st.setInt(2, dni);
            st.executeUpdate();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void desvincularHijo(int dniReferido) {
        Connection con = null;
        PreparedStatement st = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/confidence?noAccessToProcedureBodies=true", user, password);
            st = con.prepareStatement("update adheridos set dniPadre = ? where dni = ?");
            st.setInt(1, 0);
            st.setInt(2, dniReferido);
            st.executeUpdate();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(frm_editarDatosAdherente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void limpiarCampos() {
        jtf_edicionVinculoNombreReferente.setText("");
        jtf_edicionVinculoNombreReferido.setText("");
        jtf_edicionVinculoReferente.setText("");
        jtf_edicionVinculoReferido.setText("");
    }
}
